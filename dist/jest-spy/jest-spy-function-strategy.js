import { vi } from 'vitest';
import { objectUtil } from '#src/util/object-util';
export class JestSpyFunctionStrategy {
    _terms;
    _name;
    constructor(params) {
        const { terms, name } = params;
        this._terms = terms;
        this._name = name;
    }
    mockImplementationFactory() {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        const fakeImplementation = (...mockParams) => {
            const foundTerm = this._terms.find((term) => objectUtil.stringifyOrNullUndefined(term.params) === objectUtil.stringifyOrNullUndefined(mockParams));
            if (!foundTerm) {
                throw new Error(`Unknown contract ${this._name} for params ${JSON.stringify(mockParams)}`);
            }
            return foundTerm.result;
        };
        return vi.fn().mockImplementation(fakeImplementation);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiamVzdC1zcHktZnVuY3Rpb24tc3RyYXRlZ3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvamVzdC1zcHkvamVzdC1zcHktZnVuY3Rpb24tc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFhLEVBQUUsRUFBRSxNQUFNLFFBQVEsQ0FBQTtBQUl0QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUE7QUFFbEQsTUFBTSxPQUFPLHVCQUF1QjtJQUNoQixNQUFNLENBQWdCO0lBQ3RCLEtBQUssQ0FBUTtJQUVoQyxZQUFZLE1BQStDO1FBQzFELE1BQU0sRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLEdBQUcsTUFBTSxDQUFBO1FBQzlCLElBQUksQ0FBQyxNQUFNLEdBQUcsS0FBSyxDQUFBO1FBQ25CLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFBO0lBQ2xCLENBQUM7SUFFRCx5QkFBeUI7UUFDeEIsOERBQThEO1FBQzlELE1BQU0sa0JBQWtCLEdBQUcsQ0FBQyxHQUFHLFVBQWlCLEVBQU8sRUFBRTtZQUN4RCxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDakMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyx3QkFBd0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssVUFBVSxDQUFDLHdCQUF3QixDQUFDLFVBQVUsQ0FBQyxDQUM5RyxDQUFBO1lBQ0QsSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO2dCQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLG9CQUFvQixJQUFJLENBQUMsS0FBSyxlQUFlLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBVSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1lBQzNGLENBQUM7WUFFRCxPQUFPLFNBQVMsQ0FBQyxNQUFNLENBQUE7UUFDeEIsQ0FBQyxDQUFBO1FBRUQsT0FBTyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQUMsa0JBQWtCLENBQUMsQ0FBQTtJQUN0RCxDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0eXBlIE1vY2ssIHZpIH0gZnJvbSAndml0ZXN0J1xuXG5pbXBvcnQgeyB0eXBlIEplc3RTcHlTdHJhdGVneSB9IGZyb20gJyNzcmMvamVzdC1zcHkvamVzdC1zcHktc3RyYXRlZ3knXG5pbXBvcnQgeyB0eXBlIENvbnRyYWN0VGVybSB9IGZyb20gJyNzcmMvdHlwZXMvaW5kZXgnXG5pbXBvcnQgeyBvYmplY3RVdGlsIH0gZnJvbSAnI3NyYy91dGlsL29iamVjdC11dGlsJ1xuXG5leHBvcnQgY2xhc3MgSmVzdFNweUZ1bmN0aW9uU3RyYXRlZ3kgaW1wbGVtZW50cyBKZXN0U3B5U3RyYXRlZ3kge1xuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX3Rlcm1zOiBDb250cmFjdFRlcm1bXVxuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX25hbWU6IHN0cmluZ1xuXG5cdGNvbnN0cnVjdG9yKHBhcmFtczogeyB0ZXJtczogQ29udHJhY3RUZXJtW107IG5hbWU6IHN0cmluZyB9KSB7XG5cdFx0Y29uc3QgeyB0ZXJtcywgbmFtZSB9ID0gcGFyYW1zXG5cdFx0dGhpcy5fdGVybXMgPSB0ZXJtc1xuXHRcdHRoaXMuX25hbWUgPSBuYW1lXG5cdH1cblxuXHRtb2NrSW1wbGVtZW50YXRpb25GYWN0b3J5KCk6IE1vY2sge1xuXHRcdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5cdFx0Y29uc3QgZmFrZUltcGxlbWVudGF0aW9uID0gKC4uLm1vY2tQYXJhbXM6IGFueVtdKTogYW55ID0+IHtcblx0XHRcdGNvbnN0IGZvdW5kVGVybSA9IHRoaXMuX3Rlcm1zLmZpbmQoXG5cdFx0XHRcdCh0ZXJtKSA9PiBvYmplY3RVdGlsLnN0cmluZ2lmeU9yTnVsbFVuZGVmaW5lZCh0ZXJtLnBhcmFtcykgPT09IG9iamVjdFV0aWwuc3RyaW5naWZ5T3JOdWxsVW5kZWZpbmVkKG1vY2tQYXJhbXMpXG5cdFx0XHQpXG5cdFx0XHRpZiAoIWZvdW5kVGVybSkge1xuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoYFVua25vd24gY29udHJhY3QgJHt0aGlzLl9uYW1lfSBmb3IgcGFyYW1zICR7SlNPTi5zdHJpbmdpZnkobW9ja1BhcmFtcyl9YClcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGZvdW5kVGVybS5yZXN1bHRcblx0XHR9XG5cblx0XHRyZXR1cm4gdmkuZm4oKS5tb2NrSW1wbGVtZW50YXRpb24oZmFrZUltcGxlbWVudGF0aW9uKVxuXHR9XG59XG4iXX0=