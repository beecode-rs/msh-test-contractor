import { jest } from '@jest/globals';
import { JestSpyFunctionStrategy } from '../jest-spy/jest-spy-function-strategy.js';
export class MockerJestObjectStrategy {
    _contract;
    _spies = [];
    constructor(_contract) {
        this._contract = _contract;
    }
    mockRestore() {
        this._spies.forEach((spy) => spy.mockRestore());
    }
    contractSpy() {
        return this._mockObject();
    }
    _mockObject() {
        const { module, subjectName } = this._contract;
        return Object.fromEntries(Object.entries(this._contract.fns).map(([fnName, ctFunc]) => {
            const jestSpyFunction = new JestSpyFunctionStrategy({ name: `${subjectName}.${fnName}`, terms: ctFunc.terms });
            const spy = jest.spyOn(module[subjectName], fnName).mockImplementation(jestSpyFunction.mockImplementationFactory());
            this._spies.push(spy);
            return [fnName, spy];
        }));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ja2VyLWplc3Qtb2JqZWN0LXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vY2tlci9tb2NrZXItamVzdC1vYmplY3Qtc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLGVBQWUsQ0FBQTtBQUVwQyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQTtBQU1sRixNQUFNLE9BQU8sd0JBQXdCO0lBR2Q7SUFGWixNQUFNLEdBQXNCLEVBQUUsQ0FBQTtJQUV4QyxZQUFzQixTQUFzQjtRQUF0QixjQUFTLEdBQVQsU0FBUyxDQUFhO0lBQUcsQ0FBQztJQUVoRCxXQUFXO1FBQ1YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxDQUFBO0lBQ2hELENBQUM7SUFFRCxXQUFXO1FBQ1YsT0FBTyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUE7SUFDMUIsQ0FBQztJQUVTLFdBQVc7UUFDcEIsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFBO1FBRTlDLE9BQU8sTUFBTSxDQUFDLFdBQVcsQ0FDeEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxFQUFFLEVBQUU7WUFDM0QsTUFBTSxlQUFlLEdBQUcsSUFBSSx1QkFBdUIsQ0FBQyxFQUFFLElBQUksRUFBRSxHQUFHLFdBQVcsSUFBSSxNQUFNLEVBQUUsRUFBRSxLQUFLLEVBQUUsTUFBTyxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUE7WUFDL0csTUFBTSxHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLEVBQUUsTUFBTSxDQUFDLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDLHlCQUF5QixFQUFFLENBQUMsQ0FBQTtZQUNuSCxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUVyQixPQUFPLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFBO1FBQ3JCLENBQUMsQ0FBQyxDQUNGLENBQUE7SUFDRixDQUFDO0NBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBqZXN0IH0gZnJvbSAnQGplc3QvZ2xvYmFscydcblxuaW1wb3J0IHsgSmVzdFNweUZ1bmN0aW9uU3RyYXRlZ3kgfSBmcm9tICcjc3JjL2plc3Qtc3B5L2plc3Qtc3B5LWZ1bmN0aW9uLXN0cmF0ZWd5J1xuaW1wb3J0IHsgTW9ja2VyU3RyYXRlZ3kgfSBmcm9tICcjc3JjL21vY2tlci9tb2NrZXItc3RyYXRlZ3knXG5pbXBvcnQgeyBBbnlDb250cmFjdCB9IGZyb20gJyNzcmMvdHlwZXMnXG5cbmV4cG9ydCB0eXBlIE1vY2tlckplc3RPYmplY3RSZXN1bHQgPSB7IFtrOiBzdHJpbmddOiBqZXN0LlNwaWVkPGFueT4gfVxuXG5leHBvcnQgY2xhc3MgTW9ja2VySmVzdE9iamVjdFN0cmF0ZWd5IGltcGxlbWVudHMgTW9ja2VyU3RyYXRlZ3k8TW9ja2VySmVzdE9iamVjdFJlc3VsdD4ge1xuXHRwcm90ZWN0ZWQgX3NwaWVzOiBqZXN0LlNwaWVkPGFueT5bXSA9IFtdXG5cblx0Y29uc3RydWN0b3IocHJvdGVjdGVkIF9jb250cmFjdDogQW55Q29udHJhY3QpIHt9XG5cblx0bW9ja1Jlc3RvcmUoKTogdm9pZCB7XG5cdFx0dGhpcy5fc3BpZXMuZm9yRWFjaCgoc3B5KSA9PiBzcHkubW9ja1Jlc3RvcmUoKSlcblx0fVxuXG5cdGNvbnRyYWN0U3B5KCk6IE1vY2tlckplc3RPYmplY3RSZXN1bHQge1xuXHRcdHJldHVybiB0aGlzLl9tb2NrT2JqZWN0KClcblx0fVxuXG5cdHByb3RlY3RlZCBfbW9ja09iamVjdCgpOiBNb2NrZXJKZXN0T2JqZWN0UmVzdWx0IHtcblx0XHRjb25zdCB7IG1vZHVsZSwgc3ViamVjdE5hbWUgfSA9IHRoaXMuX2NvbnRyYWN0XG5cblx0XHRyZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuXHRcdFx0T2JqZWN0LmVudHJpZXModGhpcy5fY29udHJhY3QuZm5zKS5tYXAoKFtmbk5hbWUsIGN0RnVuY10pID0+IHtcblx0XHRcdFx0Y29uc3QgamVzdFNweUZ1bmN0aW9uID0gbmV3IEplc3RTcHlGdW5jdGlvblN0cmF0ZWd5KHsgbmFtZTogYCR7c3ViamVjdE5hbWV9LiR7Zm5OYW1lfWAsIHRlcm1zOiBjdEZ1bmMhLnRlcm1zIH0pXG5cdFx0XHRcdGNvbnN0IHNweSA9IGplc3Quc3B5T24obW9kdWxlW3N1YmplY3ROYW1lXSwgZm5OYW1lKS5tb2NrSW1wbGVtZW50YXRpb24oamVzdFNweUZ1bmN0aW9uLm1vY2tJbXBsZW1lbnRhdGlvbkZhY3RvcnkoKSlcblx0XHRcdFx0dGhpcy5fc3BpZXMucHVzaChzcHkpXG5cblx0XHRcdFx0cmV0dXJuIFtmbk5hbWUsIHNweV1cblx0XHRcdH0pXG5cdFx0KVxuXHR9XG59XG4iXX0=