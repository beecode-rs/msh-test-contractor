import { vi } from 'vitest';
import { JestSpyFunctionStrategy } from '#src/jest-spy/jest-spy-function-strategy';
export class MockerJestObjectStrategy {
    _contract;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    _spies = [];
    constructor(_contract) {
        this._contract = _contract;
    }
    mockRestore() {
        this._spies.forEach((spy) => spy.mockRestore());
    }
    contractSpy() {
        return this._mockObject();
    }
    _mockObject() {
        const { module, subjectName } = this._contract;
        return Object.fromEntries(Object.entries(this._contract.fns).map(([fnName, ctFunc]) => {
            const jestSpyFunction = new JestSpyFunctionStrategy({ name: `${subjectName}.${fnName}`, terms: ctFunc.terms });
            const spy = vi.spyOn(module[subjectName], fnName).mockImplementation(jestSpyFunction.mockImplementationFactory());
            this._spies.push(spy);
            return [fnName, spy];
        }));
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ja2VyLWplc3Qtb2JqZWN0LXN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vY2tlci9tb2NrZXItamVzdC1vYmplY3Qtc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLEVBQUUsRUFBRSxNQUFNLFFBQVEsQ0FBQTtBQUUzQixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQTtBQU9sRixNQUFNLE9BQU8sd0JBQXdCO0lBSWQ7SUFIdEIsOERBQThEO0lBQ3BELE1BQU0sR0FBb0IsRUFBRSxDQUFBO0lBRXRDLFlBQXNCLFNBQXNCO1FBQXRCLGNBQVMsR0FBVCxTQUFTLENBQWE7SUFBRyxDQUFDO0lBRWhELFdBQVc7UUFDVixJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUE7SUFDaEQsQ0FBQztJQUVELFdBQVc7UUFDVixPQUFPLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQTtJQUMxQixDQUFDO0lBRVMsV0FBVztRQUNwQixNQUFNLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUE7UUFFOUMsT0FBTyxNQUFNLENBQUMsV0FBVyxDQUN4QixNQUFNLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLEVBQUUsRUFBRTtZQUMzRCxNQUFNLGVBQWUsR0FBRyxJQUFJLHVCQUF1QixDQUFDLEVBQUUsSUFBSSxFQUFFLEdBQUcsV0FBVyxJQUFJLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxNQUFPLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQTtZQUMvRyxNQUFNLEdBQUcsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsRUFBRSxNQUFNLENBQUMsQ0FBQyxrQkFBa0IsQ0FBQyxlQUFlLENBQUMseUJBQXlCLEVBQUUsQ0FBQyxDQUFBO1lBQ2pILElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1lBRXJCLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUE7UUFDckIsQ0FBQyxDQUFDLENBQ0YsQ0FBQTtJQUNGLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZpIH0gZnJvbSAndml0ZXN0J1xuXG5pbXBvcnQgeyBKZXN0U3B5RnVuY3Rpb25TdHJhdGVneSB9IGZyb20gJyNzcmMvamVzdC1zcHkvamVzdC1zcHktZnVuY3Rpb24tc3RyYXRlZ3knXG5pbXBvcnQgeyB0eXBlIE1vY2tlclN0cmF0ZWd5IH0gZnJvbSAnI3NyYy9tb2NrZXIvbW9ja2VyLXN0cmF0ZWd5J1xuaW1wb3J0IHsgdHlwZSBBbnlDb250cmFjdCB9IGZyb20gJyNzcmMvdHlwZXMvaW5kZXgnXG5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5leHBvcnQgdHlwZSBNb2NrZXJKZXN0T2JqZWN0UmVzdWx0ID0geyBbazogc3RyaW5nXTogdmkuU3BpZWQ8YW55PiB9XG5cbmV4cG9ydCBjbGFzcyBNb2NrZXJKZXN0T2JqZWN0U3RyYXRlZ3kgaW1wbGVtZW50cyBNb2NrZXJTdHJhdGVneTxNb2NrZXJKZXN0T2JqZWN0UmVzdWx0PiB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5cdHByb3RlY3RlZCBfc3BpZXM6IHZpLlNwaWVkPGFueT5bXSA9IFtdXG5cblx0Y29uc3RydWN0b3IocHJvdGVjdGVkIF9jb250cmFjdDogQW55Q29udHJhY3QpIHt9XG5cblx0bW9ja1Jlc3RvcmUoKTogdm9pZCB7XG5cdFx0dGhpcy5fc3BpZXMuZm9yRWFjaCgoc3B5KSA9PiBzcHkubW9ja1Jlc3RvcmUoKSlcblx0fVxuXG5cdGNvbnRyYWN0U3B5KCk6IE1vY2tlckplc3RPYmplY3RSZXN1bHQge1xuXHRcdHJldHVybiB0aGlzLl9tb2NrT2JqZWN0KClcblx0fVxuXG5cdHByb3RlY3RlZCBfbW9ja09iamVjdCgpOiBNb2NrZXJKZXN0T2JqZWN0UmVzdWx0IHtcblx0XHRjb25zdCB7IG1vZHVsZSwgc3ViamVjdE5hbWUgfSA9IHRoaXMuX2NvbnRyYWN0XG5cblx0XHRyZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKFxuXHRcdFx0T2JqZWN0LmVudHJpZXModGhpcy5fY29udHJhY3QuZm5zKS5tYXAoKFtmbk5hbWUsIGN0RnVuY10pID0+IHtcblx0XHRcdFx0Y29uc3QgamVzdFNweUZ1bmN0aW9uID0gbmV3IEplc3RTcHlGdW5jdGlvblN0cmF0ZWd5KHsgbmFtZTogYCR7c3ViamVjdE5hbWV9LiR7Zm5OYW1lfWAsIHRlcm1zOiBjdEZ1bmMhLnRlcm1zIH0pXG5cdFx0XHRcdGNvbnN0IHNweSA9IHZpLnNweU9uKG1vZHVsZVtzdWJqZWN0TmFtZV0sIGZuTmFtZSkubW9ja0ltcGxlbWVudGF0aW9uKGplc3RTcHlGdW5jdGlvbi5tb2NrSW1wbGVtZW50YXRpb25GYWN0b3J5KCkpXG5cdFx0XHRcdHRoaXMuX3NwaWVzLnB1c2goc3B5KVxuXG5cdFx0XHRcdHJldHVybiBbZm5OYW1lLCBzcHldXG5cdFx0XHR9KVxuXHRcdClcblx0fVxufVxuIl19