export class SubjectClassFunctionStrategy {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    _module;
    _subjectName;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    _constructorParams;
    _fnName;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    constructor(params) {
        const { subjectFromContract: { module, subjectName }, constructorParams, fnName, } = params;
        this._module = module;
        if (!subjectName) {
            throw new Error('Subject name must be specified for class functions strategy');
        }
        this._subjectName = subjectName;
        this._constructorParams = constructorParams;
        this._fnName = fnName;
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    exec(term) {
        const obj = new (this.fn())(...this._constructorParams);
        if (this._isGetter()) {
            return obj[this._fnName];
        }
        return obj[this._fnName](...term.params);
    }
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    fn() {
        return this._module[this._subjectName];
    }
    _isGetter() {
        return !!Object.getOwnPropertyDescriptor(this._module[this._subjectName].prototype, this._fnName)?.get;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViamVjdC1jbGFzcy1mdW5jdGlvbi1zdHJhdGVneS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdWJqZWN0L3N1YmplY3QtY2xhc3MtZnVuY3Rpb24tc3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsTUFBTSxPQUFPLDRCQUE0QjtJQUN4Qyw4REFBOEQ7SUFDM0MsT0FBTyxDQUFLO0lBQ1osWUFBWSxDQUFRO0lBQ3ZDLDhEQUE4RDtJQUMzQyxrQkFBa0IsQ0FBTztJQUN6QixPQUFPLENBQVE7SUFFbEMsOERBQThEO0lBQzlELFlBQVksTUFBOEY7UUFDekcsTUFBTSxFQUNMLG1CQUFtQixFQUFFLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBRSxFQUM1QyxpQkFBaUIsRUFDakIsTUFBTSxHQUNOLEdBQUcsTUFBTSxDQUFBO1FBQ1YsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUE7UUFDckIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ2xCLE1BQU0sSUFBSSxLQUFLLENBQUMsNkRBQTZELENBQUMsQ0FBQTtRQUMvRSxDQUFDO1FBQ0QsSUFBSSxDQUFDLFlBQVksR0FBRyxXQUFXLENBQUE7UUFDL0IsSUFBSSxDQUFDLGtCQUFrQixHQUFHLGlCQUFpQixDQUFBO1FBQzNDLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFBO0lBQ3RCLENBQUM7SUFFRCw4REFBOEQ7SUFDOUQsSUFBSSxDQUFDLElBQWtCO1FBQ3RCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFBO1FBQ3ZELElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRSxFQUFFLENBQUM7WUFDdEIsT0FBTyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ3pCLENBQUM7UUFFRCxPQUFPLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7SUFDekMsQ0FBQztJQUVELDhEQUE4RDtJQUM5RCxFQUFFO1FBQ0QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQTtJQUN2QyxDQUFDO0lBRVMsU0FBUztRQUNsQixPQUFPLENBQUMsQ0FBQyxNQUFNLENBQUMsd0JBQXdCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLENBQUE7SUFDdkcsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdHlwZSBTdWJqZWN0RnJvbUNvbnRyYWN0LCB0eXBlIFN1YmplY3RTdHJhdGVneSB9IGZyb20gJyNzcmMvc3ViamVjdC9zdWJqZWN0LXN0cmF0ZWd5J1xuaW1wb3J0IHsgdHlwZSBDb250cmFjdFRlcm0gfSBmcm9tICcjc3JjL3R5cGVzL2luZGV4J1xuXG5leHBvcnQgY2xhc3MgU3ViamVjdENsYXNzRnVuY3Rpb25TdHJhdGVneSBpbXBsZW1lbnRzIFN1YmplY3RTdHJhdGVneSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5cdHByb3RlY3RlZCByZWFkb25seSBfbW9kdWxlOiBhbnlcblx0cHJvdGVjdGVkIHJlYWRvbmx5IF9zdWJqZWN0TmFtZTogc3RyaW5nXG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5cdHByb3RlY3RlZCByZWFkb25seSBfY29uc3RydWN0b3JQYXJhbXM6IGFueVtdXG5cdHByb3RlY3RlZCByZWFkb25seSBfZm5OYW1lOiBzdHJpbmdcblxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuXHRjb25zdHJ1Y3RvcihwYXJhbXM6IHsgc3ViamVjdEZyb21Db250cmFjdDogU3ViamVjdEZyb21Db250cmFjdDsgY29uc3RydWN0b3JQYXJhbXM6IGFueVtdOyBmbk5hbWU6IHN0cmluZyB9KSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0c3ViamVjdEZyb21Db250cmFjdDogeyBtb2R1bGUsIHN1YmplY3ROYW1lIH0sXG5cdFx0XHRjb25zdHJ1Y3RvclBhcmFtcyxcblx0XHRcdGZuTmFtZSxcblx0XHR9ID0gcGFyYW1zXG5cdFx0dGhpcy5fbW9kdWxlID0gbW9kdWxlXG5cdFx0aWYgKCFzdWJqZWN0TmFtZSkge1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKCdTdWJqZWN0IG5hbWUgbXVzdCBiZSBzcGVjaWZpZWQgZm9yIGNsYXNzIGZ1bmN0aW9ucyBzdHJhdGVneScpXG5cdFx0fVxuXHRcdHRoaXMuX3N1YmplY3ROYW1lID0gc3ViamVjdE5hbWVcblx0XHR0aGlzLl9jb25zdHJ1Y3RvclBhcmFtcyA9IGNvbnN0cnVjdG9yUGFyYW1zXG5cdFx0dGhpcy5fZm5OYW1lID0gZm5OYW1lXG5cdH1cblxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuXHRleGVjKHRlcm06IENvbnRyYWN0VGVybSk6IGFueSB7XG5cdFx0Y29uc3Qgb2JqID0gbmV3ICh0aGlzLmZuKCkpKC4uLnRoaXMuX2NvbnN0cnVjdG9yUGFyYW1zKVxuXHRcdGlmICh0aGlzLl9pc0dldHRlcigpKSB7XG5cdFx0XHRyZXR1cm4gb2JqW3RoaXMuX2ZuTmFtZV1cblx0XHR9XG5cblx0XHRyZXR1cm4gb2JqW3RoaXMuX2ZuTmFtZV0oLi4udGVybS5wYXJhbXMpXG5cdH1cblxuXHQvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuXHRmbigpOiBhbnkge1xuXHRcdHJldHVybiB0aGlzLl9tb2R1bGVbdGhpcy5fc3ViamVjdE5hbWVdXG5cdH1cblxuXHRwcm90ZWN0ZWQgX2lzR2V0dGVyKCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiAhIU9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGhpcy5fbW9kdWxlW3RoaXMuX3N1YmplY3ROYW1lXS5wcm90b3R5cGUsIHRoaXMuX2ZuTmFtZSk/LmdldFxuXHR9XG59XG4iXX0=