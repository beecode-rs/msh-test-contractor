import { SpecialFnName } from '#src/enum/special-fn-name';
import { MockerJestClassStrategy } from '#src/mocker/mocker-jest-class-strategy';
import { MockerJestFunctionStrategy } from '#src/mocker/mocker-jest-function-strategy';
import { MockerJestObjectStrategy } from '#src/mocker/mocker-jest-object-strategy';
import { typeUtil } from '#src/util/type-util';
export const mockerService = {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    strategyFromContract: (contract) => {
        const { module, subjectName, fns } = contract;
        const subject = module[subjectName];
        const { [SpecialFnName.SELF]: selfFunction } = fns;
        if (typeUtil.isFunction(subject) && selfFunction) {
            return new MockerJestFunctionStrategy(contract);
        }
        if (typeUtil.isClass(subject)) {
            return new MockerJestClassStrategy(contract);
        }
        if (typeUtil.isObject(subject)) {
            return new MockerJestObjectStrategy(contract);
        }
        throw new Error('Unknown mocker');
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9ja2VyLXNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbW9ja2VyL21vY2tlci1zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQTtBQUN6RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQTtBQUNoRixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQTtBQUN0RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQTtBQUdsRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUE7QUFFOUMsTUFBTSxDQUFDLE1BQU0sYUFBYSxHQUFHO0lBQzVCLDhEQUE4RDtJQUM5RCxvQkFBb0IsRUFBRSxDQUFDLFFBQXFCLEVBQXVCLEVBQUU7UUFDcEUsTUFBTSxFQUFFLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLEdBQUcsUUFBUSxDQUFBO1FBQzdDLE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUNuQyxNQUFNLEVBQUUsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUUsWUFBWSxFQUFFLEdBQUcsR0FBRyxDQUFBO1FBQ2xELElBQUksUUFBUSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztZQUNsRCxPQUFPLElBQUksMEJBQTBCLENBQUMsUUFBUSxDQUFDLENBQUE7UUFDaEQsQ0FBQztRQUNELElBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1lBQy9CLE9BQU8sSUFBSSx1QkFBdUIsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUM3QyxDQUFDO1FBQ0QsSUFBSSxRQUFRLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDaEMsT0FBTyxJQUFJLHdCQUF3QixDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQzlDLENBQUM7UUFDRCxNQUFNLElBQUksS0FBSyxDQUFDLGdCQUFnQixDQUFDLENBQUE7SUFDbEMsQ0FBQztDQUNELENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTcGVjaWFsRm5OYW1lIH0gZnJvbSAnI3NyYy9lbnVtL3NwZWNpYWwtZm4tbmFtZSdcbmltcG9ydCB7IE1vY2tlckplc3RDbGFzc1N0cmF0ZWd5IH0gZnJvbSAnI3NyYy9tb2NrZXIvbW9ja2VyLWplc3QtY2xhc3Mtc3RyYXRlZ3knXG5pbXBvcnQgeyBNb2NrZXJKZXN0RnVuY3Rpb25TdHJhdGVneSB9IGZyb20gJyNzcmMvbW9ja2VyL21vY2tlci1qZXN0LWZ1bmN0aW9uLXN0cmF0ZWd5J1xuaW1wb3J0IHsgTW9ja2VySmVzdE9iamVjdFN0cmF0ZWd5IH0gZnJvbSAnI3NyYy9tb2NrZXIvbW9ja2VyLWplc3Qtb2JqZWN0LXN0cmF0ZWd5J1xuaW1wb3J0IHsgdHlwZSBNb2NrZXJTdHJhdGVneSB9IGZyb20gJyNzcmMvbW9ja2VyL21vY2tlci1zdHJhdGVneSdcbmltcG9ydCB7IHR5cGUgQW55Q29udHJhY3QgfSBmcm9tICcjc3JjL3R5cGVzL2luZGV4J1xuaW1wb3J0IHsgdHlwZVV0aWwgfSBmcm9tICcjc3JjL3V0aWwvdHlwZS11dGlsJ1xuXG5leHBvcnQgY29uc3QgbW9ja2VyU2VydmljZSA9IHtcblx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcblx0c3RyYXRlZ3lGcm9tQ29udHJhY3Q6IChjb250cmFjdDogQW55Q29udHJhY3QpOiBNb2NrZXJTdHJhdGVneTxhbnk+ID0+IHtcblx0XHRjb25zdCB7IG1vZHVsZSwgc3ViamVjdE5hbWUsIGZucyB9ID0gY29udHJhY3Rcblx0XHRjb25zdCBzdWJqZWN0ID0gbW9kdWxlW3N1YmplY3ROYW1lXVxuXHRcdGNvbnN0IHsgW1NwZWNpYWxGbk5hbWUuU0VMRl06IHNlbGZGdW5jdGlvbiB9ID0gZm5zXG5cdFx0aWYgKHR5cGVVdGlsLmlzRnVuY3Rpb24oc3ViamVjdCkgJiYgc2VsZkZ1bmN0aW9uKSB7XG5cdFx0XHRyZXR1cm4gbmV3IE1vY2tlckplc3RGdW5jdGlvblN0cmF0ZWd5KGNvbnRyYWN0KVxuXHRcdH1cblx0XHRpZiAodHlwZVV0aWwuaXNDbGFzcyhzdWJqZWN0KSkge1xuXHRcdFx0cmV0dXJuIG5ldyBNb2NrZXJKZXN0Q2xhc3NTdHJhdGVneShjb250cmFjdClcblx0XHR9XG5cdFx0aWYgKHR5cGVVdGlsLmlzT2JqZWN0KHN1YmplY3QpKSB7XG5cdFx0XHRyZXR1cm4gbmV3IE1vY2tlckplc3RPYmplY3RTdHJhdGVneShjb250cmFjdClcblx0XHR9XG5cdFx0dGhyb3cgbmV3IEVycm9yKCdVbmtub3duIG1vY2tlcicpXG5cdH0sXG59XG4iXX0=